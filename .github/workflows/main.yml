name: Deployments
on:
  pull_request:
    branches: [main, development, staging]
  push:
    branches: [main, development, staging]

jobs:
  build_and_test_dev:
    name: Build and Test Development
    if: github.event.ref == 'refs/heads/development'
    runs-on: macos-latest
    environment:
      name: development
    steps:
      - name: "List all simulators"
        run: "xcrun xctrace list devices"
      - name: Start Simulator
        run: xcrun simctl boot "iPhone 14 Pro Max"
      - name: Wait for Simulator to Boot
        run: sleep 30
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Setup Flutter"
        uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.16.4"
      - run: flutter pub get
      - run: flutter test test/unit/ --flavor development
      - run: flutter test test/widget/ --flavor development
      - run: flutter test --flavor development integration_test

  create_version_number_dev:
    name: Create version number
    if: github.event.ref == 'refs/heads/development'
    runs-on: ubuntu-latest
    environment:
      name: development
    steps:
      - uses: actions/checkout@v3
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: "5.x"
      - name: Determine GitVersion
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0
      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.nuGetVersion  }} > version.txt
      - name: Upload version.txt
        uses: actions/upload-artifact@v2
        with:
          name: gitversion
          path: version.txt

  deploy_android_dev:
    name: Deploy to Development
    if: github.event.ref == 'refs/heads/development'
    runs-on: macos-latest
    environment:
      name: development
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: Get version.txt
        uses: actions/download-artifact@v2
        with:
          name: gitversion
      - name: Create new file without newline char from version.txt
        run: tr -d '\n' < version.txt > version1.txt
      - name: Read version
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: version1.txt
      - name: Update version in YAML
        run: sed -i 's/99.99.99+99/${{ steps.version.outputs.content }}+${{ github.run_number }}/g' pubspec.yaml
      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: upload-keystore.jks
          encodedString: ${{ secrets.ANDROID_KEYSTORE_FILE_BASE64 }}
      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}" >> android/key.properties
      - name: "Setup Java"
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - name: "Setup Flutter"
        uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.16.4"
      - run: flutter pub get
      - run: flutter build appbundle --release --flavor development --target=lib/main_development.dart
      - name: "Upload App Bundle"
        uses: actions/upload-artifact@v2
        with:
          name: apk-release
          path: build/app/outputs/flutter-apk/app-release.aab
  # deployStaging:
  #   name: Deploy to Staging
  #   if: github.event.ref == 'refs/heads/staging'
  #   runs-on: macos-latest
  #   environment:
  #     name: staging
  #   steps:
  #     - name: "Checkout"
  #       uses: actions/checkout@v2
  #     - name: "Setup Java"
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: "12.x"
  #     - name: "Setup Flutter"
  #       uses: subosito/flutter-action@v1
  #       with:
  #         flutter-version: "3.16.4"
  #     - run: flutter pub get
  #     - run: flutter test test/unit/ --flavor staging
  #     - run: flutter test test/widget/ --flavor staging
  #     - run: flutter test --flavor staging integration_test
  #     - run: flutter build apk --release --flavor staging --split-per-abi
  #     - name: "Upload APK"
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: apk-release
  #         path: build/app/outputs/flutter-apk/app-release.apk
  # deployProd:
  #   name: Deploy to Production
  #   if: github.event.ref == 'refs/heads/main'
  #   runs-on: macos-latest
  #   environment:
  #     name: production
  #   steps:
  #     - name: "Checkout"
  #       uses: actions/checkout@v2
  #     - name: "Setup Java"
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: "12.x"
  #     - name: "Setup Flutter"
  #       uses: subosito/flutter-action@v1
  #       with:
  #         flutter-version: "3.16.4"
  #     - run: flutter pub get
  #     - run: flutter test test/unit/ --flavor production
  #     - run: flutter test test/widget/ --flavor production
  #     - run: flutter test --flavor production integration_test
  #     - run: flutter build apk --release --flavor production --split-per-abi
  #     - name: "Upload APK"
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: apk-release
  #         path: build/app/outputs/flutter-apk/app-release.apk
  #     - name: "Sign APK"
  #       uses: r0adkll/sign-android-release@v1
  #       id: sign_app
  #       with:
  #         releaseDirectory: build/app/outputs/bundle/release/
  #         signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE_FILE_BASE64 }}
  #         alias: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
  #         keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
  #         keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
