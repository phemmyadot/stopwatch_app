name: Deployments
on:
  pull_request:
    branches: [main, development, staging]
  push:
    branches: [main, development, staging]

jobs:
  build_and_test_dev:
    name: Build and Test Development
    if: github.event.ref == 'refs/heads/development'
    runs-on: macos-latest
    environment:
      name: development
    steps:
      - name: "List all simulators"
        run: "xcrun xctrace list devices"
      - name: Start Simulator
        run: xcrun simctl boot "iPhone 14 Pro Max"
      - name: Wait for Simulator to Boot
        run: sleep 30
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Setup Flutter"
        uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.16.4"
      - run: flutter pub get
      - run: flutter test test/unit/ --flavor development
      - run: flutter test test/widget/ --flavor development
      - run: flutter test --flavor development integration_test

  deploy_android_dev:
    name: Deploy to Development
    if: github.event.ref == 'refs/heads/development'
    runs-on: macos-latest
    environment:
      name: development
    steps:
      - name: "Checkout"
        uses: actions/checkout@v2
      - name: "Setup Java"
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - name: "Setup Flutter"
        uses: subosito/flutter-action@v1
        with:
          flutter-version: "3.16.4"
      - run: flutter pub get
      - run: flutter build apk --release --flavor development --split-per-abi
      - name: Sign App Bundle
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: build/app/outputs/bundle/release/
          signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE_FILE_BASE64 }}
          alias: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
      - name: "Upload APK"
        uses: actions/upload-artifact@v2
        with:
          name: apk-release
          path: build/app/outputs/flutter-apk/app-release.apk
  # deployStaging:
  #   name: Deploy to Staging
  #   if: github.event.ref == 'refs/heads/staging'
  #   runs-on: macos-latest
  #   environment:
  #     name: staging
  #   steps:
  #     - name: "Checkout"
  #       uses: actions/checkout@v2
  #     - name: "Setup Java"
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: "12.x"
  #     - name: "Setup Flutter"
  #       uses: subosito/flutter-action@v1
  #       with:
  #         flutter-version: "3.16.4"
  #     - run: flutter pub get
  #     - run: flutter test test/unit/ --flavor staging
  #     - run: flutter test test/widget/ --flavor staging
  #     - run: flutter test --flavor staging integration_test
  #     - run: flutter build apk --release --flavor staging --split-per-abi
  #     - name: "Upload APK"
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: apk-release
  #         path: build/app/outputs/flutter-apk/app-release.apk
  # deployProd:
  #   name: Deploy to Production
  #   if: github.event.ref == 'refs/heads/main'
  #   runs-on: macos-latest
  #   environment:
  #     name: production
  #   steps:
  #     - name: "Checkout"
  #       uses: actions/checkout@v2
  #     - name: "Setup Java"
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: "12.x"
  #     - name: "Setup Flutter"
  #       uses: subosito/flutter-action@v1
  #       with:
  #         flutter-version: "3.16.4"
  #     - run: flutter pub get
  #     - run: flutter test test/unit/ --flavor production
  #     - run: flutter test test/widget/ --flavor production
  #     - run: flutter test --flavor production integration_test
  #     - run: flutter build apk --release --flavor production --split-per-abi
  #     - name: "Upload APK"
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: apk-release
  #         path: build/app/outputs/flutter-apk/app-release.apk
  #     - name: "Sign APK"
  #       uses: r0adkll/sign-android-release@v1
  #       id: sign_app
  #       with:
  #         releaseDirectory: build/app/outputs/bundle/release/
  #         signingKeyBase64: ${{ secrets.ANDROID_KEYSTORE_FILE_BASE64 }}
  #         alias: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
  #         keyStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
  #         keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PASSWORD }}
